
codeLCD_4Bit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000018e  00000202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000020e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000240  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000978  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000065b  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033f  00000000  00000000  0000128f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  000015d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e1  00000000  00000000  00001640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003b2  00000000  00000000  00001a21  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001dd3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  7a:	0c 94 c5 00 	jmp	0x18a	; 0x18a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z11LCD_Commandh>:
void LCD_Command(unsigned char cmnd)
{
	// Dau tien gui 4 bit co trong so cao nhung khong anh huong den cac Port con lai
	//LCD_Port = (LCD_Port & 0x0F) | (cmnd & 0xF0);
	
	LCD_Command_Port &= ~(1<<RS);
  82:	a8 98       	cbi	0x15, 0	; 21
	LCD_Data_Port = (cmnd & 0xF0);
  84:	98 2f       	mov	r25, r24
  86:	90 7f       	andi	r25, 0xF0	; 240
  88:	95 bb       	out	0x15, r25	; 21
	// Tao xung xuong cho chan E de cho phep ghi lenh vao LCD
	LCD_Command_Port |= (1<<EN);	// EN = 1
  8a:	a9 9a       	sbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	ef ec       	ldi	r30, 0xCF	; 207
  8e:	f7 e0       	ldi	r31, 0x07	; 7
  90:	31 97       	sbiw	r30, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <_Z11LCD_Commandh+0xe>
  94:	00 c0       	rjmp	.+0      	; 0x96 <_Z11LCD_Commandh+0x14>
  96:	00 00       	nop
	_delay_ms(1);
	LCD_Command_Port &= ~(1<<EN);	// EN = 0
  98:	a9 98       	cbi	0x15, 1	; 21
  9a:	ff ef       	ldi	r31, 0xFF	; 255
  9c:	21 ee       	ldi	r18, 0xE1	; 225
  9e:	34 e0       	ldi	r19, 0x04	; 4
  a0:	f1 50       	subi	r31, 0x01	; 1
  a2:	20 40       	sbci	r18, 0x00	; 0
  a4:	30 40       	sbci	r19, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <_Z11LCD_Commandh+0x1e>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <_Z11LCD_Commandh+0x28>
  aa:	00 00       	nop
	
	_delay_ms(200);
	
	// Tiep Theo Gui 4 bit trong so thap
	LCD_Data_Port = ((cmnd & 0x0F)<<4);
  ac:	e0 e1       	ldi	r30, 0x10	; 16
  ae:	8e 9f       	mul	r24, r30
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	85 bb       	out	0x15, r24	; 21
	// Tao xung xuong cho chan E de cho phep ghi lenh vao LCD
	LCD_Command_Port |= (1<<EN);	// EN = 1
  b6:	a9 9a       	sbi	0x15, 1	; 21
  b8:	8f ec       	ldi	r24, 0xCF	; 207
  ba:	97 e0       	ldi	r25, 0x07	; 7
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <_Z11LCD_Commandh+0x3a>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <_Z11LCD_Commandh+0x40>
  c2:	00 00       	nop
	_delay_ms(1);
	LCD_Command_Port &= ~(1<<EN);	// EN = 0
  c4:	a9 98       	cbi	0x15, 1	; 21
  c6:	ef e9       	ldi	r30, 0x9F	; 159
  c8:	ff e0       	ldi	r31, 0x0F	; 15
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <_Z11LCD_Commandh+0x48>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <_Z11LCD_Commandh+0x4e>
  d0:	00 00       	nop
  d2:	08 95       	ret

000000d4 <_Z8LCD_Charh>:
}

void LCD_Char(unsigned char char_data)
{
	
	LCD_Command_Port |= (1<<RS);
  d4:	a8 9a       	sbi	0x15, 0	; 21
	LCD_Data_Port = (char_data & 0xF0);
  d6:	98 2f       	mov	r25, r24
  d8:	90 7f       	andi	r25, 0xF0	; 240
  da:	95 bb       	out	0x15, r25	; 21
	// Tao xung xuong cho chan E de cho phep ghi lenh vao LCD
	LCD_Command_Port |= (1<<EN);	// EN = 1
  dc:	a9 9a       	sbi	0x15, 1	; 21
  de:	ef e9       	ldi	r30, 0x9F	; 159
  e0:	ff e0       	ldi	r31, 0x0F	; 15
  e2:	31 97       	sbiw	r30, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <_Z8LCD_Charh+0xe>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <_Z8LCD_Charh+0x14>
  e8:	00 00       	nop
	_delay_ms(2);
	LCD_Command_Port &= ~(1<<EN);	// EN = 0
  ea:	a9 98       	cbi	0x15, 1	; 21
  ec:	ff ef       	ldi	r31, 0xFF	; 255
  ee:	21 ee       	ldi	r18, 0xE1	; 225
  f0:	34 e0       	ldi	r19, 0x04	; 4
  f2:	f1 50       	subi	r31, 0x01	; 1
  f4:	20 40       	sbci	r18, 0x00	; 0
  f6:	30 40       	sbci	r19, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <_Z8LCD_Charh+0x1e>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <_Z8LCD_Charh+0x28>
  fc:	00 00       	nop
	
	_delay_ms(200);
	
	LCD_Data_Port = ((char_data & 0x0F)<<4);
  fe:	e0 e1       	ldi	r30, 0x10	; 16
 100:	8e 9f       	mul	r24, r30
 102:	c0 01       	movw	r24, r0
 104:	11 24       	eor	r1, r1
 106:	85 bb       	out	0x15, r24	; 21
	// Tao xung xuong cho chan E de cho phep ghi lenh vao LCD
	LCD_Command_Port |= (1<<EN);	// EN = 1
 108:	a9 9a       	sbi	0x15, 1	; 21
 10a:	8f ec       	ldi	r24, 0xCF	; 207
 10c:	97 e0       	ldi	r25, 0x07	; 7
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <_Z8LCD_Charh+0x3a>
 112:	00 c0       	rjmp	.+0      	; 0x114 <_Z8LCD_Charh+0x40>
 114:	00 00       	nop
	_delay_ms(1); 
	LCD_Command_Port &= ~(1<<EN);	// EN = 0
 116:	a9 98       	cbi	0x15, 1	; 21
 118:	ef e9       	ldi	r30, 0x9F	; 159
 11a:	ff e0       	ldi	r31, 0x0F	; 15
 11c:	31 97       	sbiw	r30, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <_Z8LCD_Charh+0x48>
 120:	00 c0       	rjmp	.+0      	; 0x122 <_Z8LCD_Charh+0x4e>
 122:	00 00       	nop
 124:	08 95       	ret

00000126 <_Z8LCD_Initv>:
	_delay_ms(2);
}

void LCD_Init(void)
{
	LCD_Data_Port |= (1<<PC4) | (1<<PC5) | (1<<PC6) | (1<<PC7);
 126:	85 b3       	in	r24, 0x15	; 21
 128:	80 6f       	ori	r24, 0xF0	; 240
 12a:	85 bb       	out	0x15, r24	; 21
 12c:	8f e3       	ldi	r24, 0x3F	; 63
 12e:	9c e9       	ldi	r25, 0x9C	; 156
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <_Z8LCD_Initv+0xa>
 134:	00 c0       	rjmp	.+0      	; 0x136 <_Z8LCD_Initv+0x10>
 136:	00 00       	nop
	_delay_ms(20);
	
	LCD_Command(0x28);
 138:	88 e2       	ldi	r24, 0x28	; 40
 13a:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
	LCD_Command(0x02);
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
	LCD_Command(0x0C);
 144:	8c e0       	ldi	r24, 0x0C	; 12
 146:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
	LCD_Command(0x01);
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 150:	8f e9       	ldi	r24, 0x9F	; 159
 152:	9f e0       	ldi	r25, 0x0F	; 15
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <_Z8LCD_Initv+0x2e>
 158:	00 c0       	rjmp	.+0      	; 0x15a <_Z8LCD_Initv+0x34>
 15a:	00 00       	nop
 15c:	08 95       	ret

0000015e <_Z10LCD_StringPc>:
	_delay_ms(2);
}

void LCD_String(char *str)
{
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	ec 01       	movw	r28, r24
	for(int i = 0; str[i] != 0; i++)
 164:	88 81       	ld	r24, Y
 166:	88 23       	and	r24, r24
 168:	31 f0       	breq	.+12     	; 0x176 <_Z10LCD_StringPc+0x18>
 16a:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_Char(str[i]);
 16c:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z8LCD_Charh>
	_delay_ms(2);
}

void LCD_String(char *str)
{
	for(int i = 0; str[i] != 0; i++)
 170:	89 91       	ld	r24, Y+
 172:	81 11       	cpse	r24, r1
 174:	fb cf       	rjmp	.-10     	; 0x16c <_Z10LCD_StringPc+0xe>
	{
		LCD_Char(str[i]);
	}
}
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	08 95       	ret

0000017c <main>:


int main(void)
{
    /* Replace with your application code */
	LCD_Init();
 17c:	0e 94 93 00 	call	0x126	; 0x126 <_Z8LCD_Initv>
	LCD_String("Hello Work");
 180:	80 e6       	ldi	r24, 0x60	; 96
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 af 00 	call	0x15e	; 0x15e <_Z10LCD_StringPc>
 188:	ff cf       	rjmp	.-2      	; 0x188 <main+0xc>

0000018a <_exit>:
 18a:	f8 94       	cli

0000018c <__stop_program>:
 18c:	ff cf       	rjmp	.-2      	; 0x18c <__stop_program>
